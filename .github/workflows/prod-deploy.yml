# .github/workflows/prod-deploy.yml

name: 'Terragrunt Deploy PROD'
  
on:
  push:
    paths:
      - '.github/**'
      - 'src/**'
      - 'infra/**'
    branches:
      - 'main'
      - 'master'
        
jobs:
    pre-check:
      runs-on: ubuntu-latest
      outputs:
        should_skip: ${{ steps.skip_check.outputs.should_skip }}
      steps:
        - id: skip_check
          uses: fkirc/skip-duplicate-actions@v5
          with:
            cancel_others: 'true'
            concurrent_skipping: 'same_content_newer'
              
    deploy-aws-infra:
      needs: pre-check
      if: ${{ (github.event.pull_request.merged == true || github.event_name == 'push') && needs.pre-check.outputs.should_skip != 'true' }}
      name: 'Deploy AWS Infra PROD'
      runs-on: ubuntu-latest
      env:
        TF_VAR_username: ${{secrets.USERNAME}}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
        AWS_PROFILE: saml
        AWS_DEFAULT_REGION: us-east-1
        AWS_DEFAULT_OUTPUT: json
        INFRA_DIR: infra/us-east-1/prod
        TG_VERSION: v0.36.1
        TF_VERSION: latest

      strategy:
        fail-fast: true
        matrix:
          src: ['lambda/hello/main.go']
          output: [lambda/bin/lambda_hello.exe]
        
      steps:
      # setup auth with aws
      - name: AWS    
        run: |
            aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID_PROD }} --profile saml
            aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }} --profile saml

      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2
          
      # build go binaries
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: go build -o infra/us-east-1/dev/${{matrix.output}} src/cmd/${{matrix.src}}

      # - name: Test
      #   run: go test -v ./...

      - name: Install Terraform
        uses: hashicorp/setup-Terraform@v1
        with:
          terraform_version: ${{ TF_VERSION }}
            
      - name: Install Terragrunt ${{ TG_VERSION }}
        run: |
          sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/${{ TG_VERSION }}/terragrunt_linux_amd64"
          sudo chmod +x /bin/terragrunt

      - name: Terragrunt Validate
        continue-on-error: false
        run: |
          terragrunt run-all validate --terragrunt-working-dir ${{env.INFRA_DIR}}
          
      - name: Terragrunt Plan
        continue-on-error: false
        run: |
          terragrunt run-all plan --terragrunt-working-dir ${{env.INFRA_DIR}}
          
      - name: Terragrunt Apply
        continue-on-error: false
        run: |
          terragrunt run-all apply --terragrunt-working-dir ${{env.INFRA_DIR}} --terragrunt-non-interactive
 
        
    # use if you need to debug workflow
    # - name: DEBUG
    #   uses: lhotari/action-upterm@v1
    #   with:
    #       limit-access-to-actor: true
          # limit-access-to-users: Fomiller


