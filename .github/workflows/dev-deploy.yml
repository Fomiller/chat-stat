# .github/workflows/dev-deploy.yml

name: 'Terragrunt Deploy DEV'
  
on:
  push:
    paths:
      - '.github/**'
      - 'src/**'
      - 'infra/**'
    branches:
      - '*'
      - 'feature/*'
      - '!main'
      - '!master'
        
jobs:
  pre-check:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5
        with:
          cancel_others: 'true'
          concurrent_skipping: 'same_content_newer'
          
  deploy-aws-infra:
    needs: pre-check
    if: ${{ (github.event.pull_request.merged == true || github.event_name == 'push') && needs.pre-check.outputs.should_skip != 'true' }}
    name: 'Deploy AWS Infra DEV'
    runs-on: ubuntu-latest
    env:
      TF_VAR_username: ${{secrets.USERNAME}}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
      AWS_PROFILE: saml
      AWS_DEFAULT_REGION: us-east-1
      AWS_DEFAULT_OUTPUT: json
      INFRA_DIR: infra/us-east-1/dev

    steps:
    - name: AWS    
      run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID_DEV }} --profile saml
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }} --profile saml

    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terragrunt CLI and configure the Terragrunt CLI configuration file with a Terragrunt Cloud user API toke
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: go build -o infra/us-east-1/dev/lambda/bin/lambda_hello.exe src/cmd/lambda/hello/main.go

    # - name: Test
    #   run: go test -v ./...

    # use if you need to debug workflow
    # - name: DEBUG
    #   uses: lhotari/action-upterm@v1
    #   with:
    #       limit-access-to-actor: true
    #       limit-access-to-users: Fomiller
        
    - name: Install Terraform
      uses: hashicorp/setup-Terraform@v1
      with:
        terraform_version: latest
          
    - name: Install Terragrunt v0.36.1
      run: |
        sudo wget -q -O /bin/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v0.36.1/terragrunt_linux_amd64"
        sudo chmod +x /bin/terragrunt

    # Initialize a new or existing Terragrunt working directory by creating initial files,  loading any remote state, downloading modules, etc.
    - name: Terragrunt Validate
      continue-on-error: false
      run: |
        terragrunt run-all validate --terragrunt-working-dir ${{env.INFRA_DIR}}
        
    - name: Terragrunt Plan
      continue-on-error: false
      run: |
        terragrunt run-all plan --terragrunt-working-dir ${{env.INFRA_DIR}}
        
    - name: Terragrunt Apply
      continue-on-error: false
      run: |
        terragrunt run-all apply --terragrunt-working-dir ${{env.INFRA_DIR}} --terragrunt-non-interactive
        

